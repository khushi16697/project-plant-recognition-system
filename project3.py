# -*- coding: utf-8 -*-
"""
Created on Wed Jan 15 22:07:25 2020

@author: KIIT
"""
import tkinter.messagebox as m
from sklearn import metrics
import pandas as pd
import numpy as np
from sklearn.metrics import accuracy_score
from sklearn.metrics import f1_score
from sklearn.metrics import classification_report
from sklearn.metrics import confusion_matrix
data=pd.read_csv('leaf.csv')
X=data.iloc[:,1:7].values
Y=data.iloc[:,0].values
from sklearn.model_selection import train_test_split
X_train,X_test,Y_train,Y_test=train_test_split(X,Y,test_size=0.1,random_state=12)

def KNN():
    global acc_knn
    global K
    global Y_pred_knn
    from sklearn.neighbors import KNeighborsClassifier
    K= KNeighborsClassifier(n_neighbors=5)
    K.fit(X_train,Y_train)
    Y_pred_knn=K.predict(X_test)
    
    acc_knn=accuracy_score(Y_test,Y_pred_knn)
    acc_knn=round(acc_knn*100,2)
    m.showinfo(title="KNN",message="accuracy is"+str(acc_knn)+"%")
    
def clas_knn():    
    print(classification_report(Y_test,Y_pred_knn))
    
def clas_nb():    
    print(classification_report(Y_test,Y_pred_nb))

def clas_dt():    
    print(classification_report(Y_test,Y_pred_dt))

def clas_lg():    
    print(classification_report(Y_test,Y_pred_lg))

def conf():
    results=confusion_matrix(Y_test,Y_pred_knn)    
    print(results)
    
def LG():
    global acc_lg
    global Y_pred_lg
    from sklearn.linear_model import LogisticRegression
    L=LogisticRegression(solver='liblinear',\
                         multi_class='auto')
    ###train the model
    L.fit(X_train,Y_train)
    ####test the model
    Y_pred_lg=L.predict(X_test)
    ##find accuracy
    acc_lg=accuracy_score(Y_test,Y_pred_lg)
    acc_lg=round(acc_lg*100,2)
    m.showinfo(title="LG",message="accuracy is"+str(acc_lg)+"%")
    
def DT():
    global acc_dt
    global Y_pred_dt
    from sklearn.tree import DecisionTreeClassifier
    D=DecisionTreeClassifier()
    #train thre model
    D.fit(X_train,Y_train)
    #test the model
    Y_pred_dt=D.predict(X_test)
    ##find accuracy
    acc_dt=accuracy_score(Y_test,Y_pred_dt)
    acc_dt=round(acc_dt*100,2)
    m.showinfo(title="DT",message="accuracy is"+str(acc_dt)+"%")
    
def NB():
    global acc_nb
    global Y_pred_nb
    from sklearn.naive_bayes import GaussianNB
    N=GaussianNB()
    #train the model
    N.fit(X_train,Y_train)
    #test the model
    Y_pred_nb=N.predict(X_test)
    ##find accuracy
    acc_nb=accuracy_score(Y_test,Y_pred_nb)
    acc_nb=round(acc_nb*100,2)
    m.showinfo(title="NB",message="accuracy is"+str(acc_nb)+"%")
    
def COMPARE():
    global acc_knn
    global acc_dt
    global acc_nb
    global acc_lg 
    import matplotlib
    matplotlib.use("TkAgg")
    from matplotlib.backends.backend_tkagg import FigureCanvasTkAgg
    from matplotlib.figure import Figure
    model=['KNN',"LG",'DT','NB']
    accuracy=[acc_knn,acc_lg,acc_dt,acc_nb]
    matplotlib.bar(model,accuracy,color=['red','cyan','yellow','blue'])
    matplotlib.xlabel("MODELS")
    matplotlib.ylabel("Accuracy")
    canvas= FigureCanvasTkAgg(accuracy,self)
    canvas.show()
    canvas.get_tk_widget().pack(side=TOP,FILL=BOTH,expand=True)
    
   
    

    
def SUBMIT():
   
    p1=float(v1.get())
    p2=float(v2.get())
    p3=float(v3.get())
    p4=float(v4.get())
    p5=float(v5.get())
    p6=float(v6.get())
    result=K.predict([[p1,p2,p3,p4,p5,p6]])
    if result[0]==1:
        plant="QUERCUS SUBER"
    elif result[0]==2:
        plant="SALIX ATROCINERA"
    elif result[0]==3:
        plant="POPULUS NIGRA"
    elif result[0]==4:
        plant="ALNUS SP."
    elif result[0]==5:
        plant="QUERCUS ROBUR"
    elif result[0]==6:
        plant="CRATAEGUS MONOGYNA"
    elif result[0]==7:
        plant="ILEX AQUIFOLIUM"
    elif result[0]==8:
        plant="NERIUM OLEANDER"
    elif result[0]==9:
        plant="BETULA PUBESCENS"
    elif result[0]==10:
        plant="TILIA TOMENTOSA"
    elif result[0]==11:
        plant="ACER PALMATUM"
    elif result[0]==12:
        plant="CELTIS SP."
    elif result[0]==13:
        plant="CORYLUS AVELLANA"
    elif result[0]==14:
        plant="CASTANEA SATIVA"
    elif result[0]==15:
        plant="POPULUS ALBA"
    elif result[0]==16:
        plant="ACER NEGUNDO"
    elif result[0]==17:
        plant="TAXUS BACATTA"
    elif result[0]==18:
        plant="PAPAVER SP."
    elif result[0]==19:
        plant="POLYPOLIUM VULGARE"
    elif result[0]==20:
        plant="PINUS SP."
    elif result[0]==21:
        plant="FRAXINUS SP."
    elif result[0]==22:
        plant="PRIMULA VULGARIS"
    elif result[0]==23:
        plant="ERODIUM SP."
    elif result[0]==24:
        plant="BOUGAINVILLEA SP."
    elif result[0]==25:
        plant="ARISARUM VULGARE"
    elif result[0]==26:
        plant="EUONYMUS JAPONICUS"
    elif result[0]==27:
        plant="ILEX PERADO SSP.AZORICA"
    elif result[0]==28:
        plant="MAGNOLIA SOULANGEANA"
    elif result[0]==29:
        plant="BAXUS SEMPERVIRENS "
    elif result[0]==30:
        plant="URTICA DIOICA"
    elif result[0]==31:
        plant="PODOCARPUS SP."
    elif result[0]==32:
        plant="ACCA SELLOWIANA"
    elif result[0]==33:
        plant="HYDRANGEA SP."
    elif result[0]==34:
        plant="PSEUDOSASA JAPONICA"
    elif result[0]==35:
        plant="MAGNOLIA GRANDIFLORA"    
    else:
        plant="GERANIUM SP."
    m.showinfo(title="SCIENTIFIC NAME",message=plant)
    
def RESET():
    E1.set("select")
    E2.set("select")
    E3.set("select")
    E4.set("select")
    E5.set("select")
    E6.set("select")
    
def open_window():
    top=Toplevel()
    top.title("window 2")
    top.resizable(0,0)
    button2 =Button(top,text="confusion matrix of nb",command=Confusion1,font=("arial",15,"bold"))
    button2.pack()
    button3 =Button(top,text="confusion matrix of knn",command=Confusion2,font=("arial",15,"bold"))
    button3.pack()
    button4 =Button(top,text="confusion matrix of lg",command=Confusion3,font=("arial",15,"bold"))
    button4.pack()
    button5 =Button(top,text="confusion matrix of dt",command=Confusion4,font=("arial",15,"bold"))
    button5.pack()
    button1 =Button(top,text="close",command=top.destroy,font=("arial",20,"bold"))
    button1.pack()
from tkinter import *
from tkinter import ttk
w=Tk()
w.resizable(0,0)
w.title("PLANT RECOGNITION SYSTEM")
v1=StringVar()
v2=StringVar()
v3=StringVar()
v4=StringVar()
v5=StringVar()
v6=StringVar()

nb=ttk.Notebook(w)
page1=ttk.Frame(nb)
page2=ttk.Frame(nb)
page3=ttk.Frame(nb)
nb.add(page1,text="TAB1")
nb.add(page2,text="TAB 2")
nb.add(page3,text="TAB3")
nb.grid(row=0,column=0)


L=ttk.Label(page2,text="PLANT RECOGNITION SYSTEM",font=("arial",25,"bold"))
L1=ttk.Label(page2,text="PREDICT FOR A NEW PLANT",font=("arial",20,"bold"))
b1=ttk.Label(page2,text="SPECIMEN NO",font=("arial",10,"bold")) 
b2=ttk.Label(page2,text="ECCENTRICITY",font=("arial",10,"bold")) 
b3=ttk.Label(page2,text="ASPECT RATIO",font=("arial",10,"bold"))
b4=ttk.Label(page2,text="ELONGATION",font=("arial",10,"bold"))
b5=ttk.Label(page2,text="SMOOTHNESS",font=("arial",10,"bold"))
b6=ttk.Label(page2,text="ENTROPY",font=("arial",10,"bold"))
E1=ttk.Combobox(page2,textvariable=v1,font=("arial",10,"bold"),width=10)
E2=ttk.Combobox(page2,textvariable=v2,font=("arial",10,"bold"),width=10)
E3=ttk.Combobox(page2,textvariable=v3,font=("arial",10,"bold"),width=10)
E4=ttk.Combobox(page2,textvariable=v4,font=("arial",10,"bold"),width=10)
E5=ttk.Combobox(page2,textvariable=v5,font=("arial",10,"bold"),width=10)
E6=ttk.Combobox(page2,textvariable=v6,font=("arial",10,"bold"),width=10)
E1['values']=(1	,2	,3	,4	,5	,6	,7	,8	,9	,10	,11	,12	,1	,2	,3	,4	,5	,6	,7,	8	,9	,10,	1,	2,	3,	4,	5,	6,	7,	8,	9,	10,	1,	2,	3,	4,	5,	6,	7,	8,	1,	2,	3,	4,	5,	6,	7,	8,	9	,10	,11	,12	,1	,2	,3	,4	,5	,6	,7	,8	,1	,2	,3	,4	,5	,6	,7	,8	,9	,10	,1	,2	,3	,4,	5,	6	,7	,8,	9,	10,	11,	1,	2,	3,	4,	5,	6,	7,	8,	9	,10	,11	,12	,13	,14	,1,	2,	 3	,4,	5	,6	,7,	8,	9	,10	,11	,12	,13	,1	,2	,3	,4	,5	,6	,7	,8,	9	,10	,11	,12	,13	,14	,15	,16,	1,	2,	3,	4,	5,	6,	7,	8	,9	,10	,11	,12	,1	,2	,3	,4	,5	,6	,7	,8	,9	,10	,11,	12	,13	,1	,2	,3	,4	,5	,6	,7	,8	,9	,10	,11	,12	,1	,2	,3	,4	,5	,6	,7	,8	,9	,10	,1	,2	,3	,4	,5	,6	,7	,8	,9	,10	,11,	12	,1	,2	,3	,4	,5	,6	,7	,8	,9	,10	,11,	1,	2,	3,	4,	5,	6,	7,	8,	9,	10,	11,	12,	13,	1,	2,	3,	4,	5,	6,	7,	8,	9,	1,	2,	3,	4,	5,	6,	7,	8,	9	,10,	11	,12,	1,	2,	3,	4,	5,	6,	7,	8,	9,	10,	11,	1,	2,	3,	4,	5,	6,	7,	8,	9,	10,	11,	12,	1,	2,	3,	4,	5,	6,	7,	8,	9,	10,	11,	12,	1,	2,	3,	4,	5,	6,	7,	8,	9,	10,	11,	12,	1,	2,	3,	4,	5,	6,	7,	8,	9,	10,	11,	1,	2,	3,	4,	5,	6,	7,	8,	9,	10,	11,	1,	2,	3,	4,	5,	6,	7,	8,	9,	10,	11,	1,	2,	3,	4,	5,	6,	7,	8,	9,	10,	11,	1,	2,	3,	4,	5,	6,	7,	8,	9,	10,	11,	1,	2,	3,	4,	5,	6,	7,	8,	9,	10)
E2['values']=(0.72694	,0.74173	,0.76722,	0.73797,	0.82301,	0.72997,	0.82063,	0.77982,	0.83089,	0.90631,	0.7459,	0.79606,	0.93361,	0.91186,	0.89063,	0.86755,	0.91852,	0.88795,	0.85121,	0.89084,	0.93062 ,	0.84113,	0.70273	,0.66307,	0.61289	,0.70668,	0.66889,	0.50139,	0.60803,	0.56599,	0.68605,	0.59571	,0.39432,	0.62011,	0.73429	,0.64161	,0.64056,	0.74242,	0.39289,	0.53017	,0.87844,	0.88075,	0.86545,	0.93671	,0.92676	,0.90944	,0.89493,	0.93613,	0.88172,	0.86224	,0.82268,	0.82135	,0.46348,	0.50784,	0.47728,	0.52744,	0.50964,	0.63965,	0.71847,	0.47815,	0.84886,	0.83755	,0.84315,	0.82602,	0.86486	,0.84563,	0.87163,	0.86587,	0.82373	,0.84285,	0.98502,	0.98487,	0.98853,	0.98326,	0.98592,	0.98695,	0.98717,	0.98361	,0.98643,	0.986,	0.98824,	0.47821,	0.53941,	0.54833,	0.58938,	0.64803,	0.54029,	0.4309,	0.4659,	0.4867	,0.46098,	0.73086,	0.51577,	0.59837,	0.55112,	0.44941,	0.46727,	0.55362,	0.32175	,0.64414,	0.55977	,0.50114,	0.23041	,0.46094,	0.54913,	0.32168,	0.38564	,0.36127,	0.51247,	0.54893	,0.43425	,0.38501,	0.26758	,0.24465	,0.39092,	0.4042	,0.50692,	0.47565,	0.52382,	0.36462,	0.52212	,0.38203,	0.27123,	0.44882,	0.88374	,0.91579,	0.82866,	0.87863,	0.92876,	0.91093	,0.92479,	0.90037,	0.8728	,0.93377	,0.88185,	0.87259,	0.71763,	0.73281	,0.75285,	0.73935,	0.63969,	0.62033	,0.64536	,0.70115,	0.70275	,0.69686,	0.66351,	0.67362,	0.64314,	0.91298,	0.9136,	0.91355	,0.91378,	0.85897,	0.91296,	0.93802,	0.94058	,0.89672,	0.89507	,0.88246,	0.90831,	0.4132,	0.56324,	0.48967,	0.60319,	0.53622,	0.37902,	0.53693,	0.51153,	0.44271	,0.30574,	0.92522,	0.90557	,0.91885,	0.88965	,0.9456	,0.91747,	0.86049,	0.89808,	0.86988,	0.86675	,0.96652,	0.93396,	0.61823,	0.61717,	0.62404	,0.48229,	0.5684,	0.62733	,0.58637,	0.50771,	0.6018,	0.63548	,0.65048,	0.64604,	0.55457,	0.4443,	0.6368	,0.64168,	0.58232,	0.44567,	0.67925,	0.11708	,0.53283	,0.52828,	0.35236	,0.64897	,0.72162,	0.71573,	0.81957,	0.83029	,0.75259	,0.7831,	0.78823,	0.83094,	0.7885,	0.73365	,0.82775,	0.55626,	0.29901	,0.48223,	0.5895,	0.322,	0.482,	0.87402,	0.58138	,0.40974,	0.82556	,0.60267,	0.66906,	0.8138,	0.72719	,0.79923,	0.81354,	0.8561,	0.75968	,0.8031	,0.79389	,0.66551,	0.946,	0.93038	,0.91549,	0.87202	,0.91328,	0.91996	,0.91677	,0.91397,	0.8762	,0.92081,	0.86832	,0.93323	,0.8375,	0.83275,	0.84579,	0.74053	,0.82924,	0.82256,	0.84501,	0.8187,	0.78965	,0.80728,	0.80393	,0.85451,	0.50924,	0.52914	,0.2458	,0.55518	,0.35141,	0.4803,	0.19287	,0.49634	,0.33254,	0.39606,	0.41933	,0.45767,	0.99541	,0.99611,	0.99767,	0.99456,	0.997,	0.99698,	0.99551	,0.99502	,0.99583,	0.99593,	0.99422	,0.86224,	0.87024,	0.86248	,0.90305	,0.88566	,0.88078,	0.88485	,0.88661,	0.83188	,0.85278,	0.78676	,0.69887	,0.60555	,0.79495	,0.75535	,0.69398	,0.81992,	0.68878,	0.72174,	0.73067,	0.65119,	0.71999,	0.99571,	0.99569,	0.9967,	0.99841	,0.99799,	0.99512,	0.99505	,0.99518,	0.9953	,0.99515,	0.99871,	0.9109,	0.90391,	0.90755	,0.91708,	0.9166	,0.8942	,0.93847	,0.89518	,0.91707,	0.92535,	0.91861,	0.39093	,0.47124	,0.3687,	0.14986	,0.68069,	0.37522,	0.28064	,0.35344,	0.59988	,0.47195)
E3['values']=(1.4742,	1.5257,	1.5725,	1.4597,	1.7707	,1.4892	,1.7529,	1.6215,	1.8199,	2.3906,	1.4927,	1.6934,	2.7582,	2.4994,	2.2927,	2.009,	2.5247	,2.2038,	1.9548,	2.2979,	2.8973	,1.86,	1.2099,	1.2065	,1.0991,	1.251,	1.1435,	1.0066,	1.0646	,1.0427,	1.1632,	1.084,	1.1191	,1.3298,	1.5069	,1.3004,	1.3166,	1.5529,	1.1286,	1.2503	,1.8096	,1.736,	1.8803	,2.4151,	2.222	,2.1139,	2.0494,	2.3898,	1.774	,1.7434	,1.6657,	1.6035,	1.0544,	1.0544	,1.2115	,1.0419	,1.2067,	1.2323,	1.2291	,1.1032,	1.7011,	1.5634,	1.8134,	1.6637,	1.7986,	1.7418,	2.0659,	1.9999,	1.6421	,1.8572	,6.0596,	6.0229,	6.628	,5.8308,	6.0269	,6.2904,	6.5173,	5.8719	,6.1273,	6.1763,	7.142	,1.2059,	1.278	,1.2733,	1.3232,	1.392	,1.2759,	1.2825,	1.2195	,1.2165	,1.2199,	1.5285,	1.2902,	1.3539,	1.2821,	1.1374,	1.1876	,1.2438,	1.1782	,1.37	,1.3442,	1.2499	,1.1294,	1.1366,	1.2769,	1.1127,	1.0471,	1.0573,	1.1116,	1.1111,	1.095,	1.0656,	1.1316,	1.047	,1.087	,1.0965,	1.127	,1.0656,	1.1117,	1.0811,	1.1191,	1.0405,	1.096,	1.0118,	2.4765,	2.5959,	1.9848	,2.4734,	2.8218,	2.6184,	2.5638,	2.3499	,2.3151	,2.8883	,2.1732,	2.1845,	1.5041,	1.5437,	1.5603	,1.5319,	1.3612	,1.3105,	1.3743,	1.4925,	1.5016	,1.4507,	1.4024,	1.3988,	1.3574,	2.455,	2.5213,	2.457,	2.4132,	1.9723,	2.4862,	2.8087,	3.0366	,2.2534,	2.2045,	2.1,	2.4038,	1.0384,	1.1928	,1.1232,	1.088,	1.2341,	1.0738	,1.0751	,1.0767,	1.0836,	1.1176	,2.695,	2.3423,	2.638	,2.3863,	3.1174	,2.7054,	2.0997,	2.4056,	2.1277,	2.0417	,3.8162,	2.9367,	1.2435,	1.2296,	1.1599	,1.1574	,1.1876,	1.2441,	1.1419	,1.1084,	1.2254,	1.202,	1.2354,	1.4683,	1.2955,	1.2035	,1.4266,	1.4853,	1.343,	1.2107,	1.487,	1.0944,	1.3078,	1.2496	,1.146	,1.4597,	1.4686	,1.3808,	1.56,	1.633	,1.5852,	1.5389	,1.6027,	1.6643,	1.638,	1.5028,	1.842	,1.2516,	1.0375	,1.1577	,1.2708	,1.0698	,1.1415	,2.0754	,1.2486,	1.0732,	1.6903,	1.254	,1.2751,	1.737	,1.4779	,1.6549,	1.6924,	1.873	,1.5763,	1.652	,1.5303	,1.3617,	3.3475	,2.8852,	2.6796,	2.1536,	2.5654	,2.6668	,2.6955,	2.7289,	2.2436	,2.9198,	2.141	,3.222,	1.9512,	2.0014	,2.0052,	1.6378	,1.8903,	1.9016,	2.0918,	1.9126	,1.8186,	1.857	,1.8829	,2.06,	1.2166,	1.2066,	1.1011,	1.2318,	1.1428,	1.2022,	1.0551,	1.1832,	1.1208,	1.1647	,1.1928	,1.1629	,9.4912	,11.006	,12.009,	9.7351	,12.548,	10.913,	9.6915,	8.991,	9.1366	,10.12,	9.1985,	2.0735,	2.1094,	2.0398,	2.3455	,2.2029	,2.147	,2.2398	,2.2553	,1.8445	,1.9935	,1.6815,	1.4947,	1.3891,	1.7056,	1.6662,	1.4542	,1.8698,	1.4399,	1.5301,	1.5145	,1.4026,	1.569	,10.352	,9.9653,	11.361,	16.832	,15.068,	10.377,	10.736,	10.421	,10.63,	10.007,	19.038,	2.5488	,2.458	,2.582	,2.6498	,2.6711	,2.4203	,3.0198	,2.3875	,2.6504	,2.803	,2.8114	,1.1025,	1.1349,	1.0456,	1.0558,	1.1866	,1.1417,	1.0849	,1.0329	,1.1427	,1.0901)
E4['values']=(0.32396,	0.36116	,0.38998	,0.35376	,0.44462	,0.34284	,0.44458	,0.39222	,0.45693,	0.58336,	0.34116,	0.43387	,0.64257,	0.60323	,0.56667,	0.51464,	0.61648	,0.56218,	0.4892	,0.57815,	0.65828	,0.46549,	0.36317	,0.32559	,0.33117	,0.38111	,0.3846	,0.29593	,0.3446	,0.35318,	0.37528	,0.32592	,0.17272,	0.2836	,0.40827	,0.31556	,0.28616	,0.38804,	0.17039,	0.23254,	0.63151	,0.58345,	0.62039,	0.7298	,0.6558,	0.69555	,0.64925	,0.67175	,0.63974,	0.62464,	0.59909	,0.6025	,0.72231	,0.623,	0.68343,	0.51662	,0.70618,	0.60663	,0.693	,0.52998	,0.5348	,0.53329,	0.54611	,0.49244	,0.55606,	0.49818,	0.55339	,0.52725,	0.47458,	0.51931	,0.83612	,0.83628	,0.84928	,0.82878	,0.83884,	0.84124	,0.84726	,0.82847	,0.84737	,0.83942	,0.86069	,0.34976	,0.32286	,0.31093	,0.40145	,0.41362,	0.36992	,0.38769	,0.27095	,0.37691	,0.32967	,0.46455	,0.32454	,0.35704	,0.39683	,0.38458	,0.36748	,0.39517	,0.32151	,0.42697	,0.34301	,0.30101,	0.25496,	0.22905,	0.31283,	0.27055	,0.23328	,0.26213	,0.65626,	0.63983	,0.68828	,0.63042	,0.60128	,0.60511,	0.68174	,0.65899,	0.67203	,0.69172	,0.67175	,0.67755	,0.70988,	0.6901	,0.68075	,0.6301	,0.61389	,0.63023	,0.50917,	0.60898	,0.66081	,0.63236	,0.62255,	0.60125	,0.58751	,0.66665,	0.57028,	0.56922	,0.33723,	0.36231	,0.38474,	0.34987	,0.28845	,0.26312,	0.28162	,0.34048	,0.34772	,0.33575	,0.31179	,0.30608	,0.28063	,0.61097,	0.61341,	0.61108	,0.60362	,0.51434	,0.62315,	0.65774	,0.69248	,0.57689	,0.55605	,0.5486	,0.59263,	0.48465,	0.474	,0.46175	,0.51739	,0.44979	,0.5242,	0.55667	,0.47053	,0.49548	,0.58847	,0.63571	,0.58487	,0.62859	,0.59051	,0.70912,	0.64091	,0.532	,0.59137	,0.53926	,0.52999	,0.74273,	0.66689	,0.33084	,0.34897	,0.47899,	0.42617	,0.48001,	0.50214	,0.30339	,0.25071	,0.41835	,0.47365	,0.44987	,0.35457	,0.25519	,0.19432	,0.29976	,0.3362	,0.29271	,0.20257	,0.33465	,0.1745	,0.25925,	0.2238,	0.20076	,0.3304	,0.43475,	0.37798	,0.49513	,0.49437,	0.41155	,0.42639	,0.44995	,0.49439	,0.43032	,0.34887	,0.48769,	0.23975	,0.10761	,0.16908	,0.24364	,0.13626	,0.15235	,0.55373	,0.21485	,0.14538,	0.47477	,0.20587	,0.30877	,0.42956	,0.3298	,0.40919	,0.41016	,0.49654	,0.38954	,0.40268,	0.42937	,0.26804	,0.7081	,0.67525	,0.62862	,0.53817	,0.61185	,0.63083	,0.62998,	0.64656,	0.56314	,0.65845	,0.54004	,0.69174	,0.4905	,0.50157	,0.49931	,0.3892,	0.47248,	0.47622	,0.51732	,0.47835	,0.45353,	0.46197,	0.4698,	0.51569,	0.27943	,0.25595	,0.20617,	0.25226,	0.24265,	0.26797	,0.25044,	0.22855,	0.27473	,0.29415,	0.30567,	0.24078,	0.91397	,0.92239	,0.94529,	0.90444	,0.92397,	0.93836	,0.91233	,0.92789	,0.92503	,0.92461	,0.91119	,0.52269,	0.52863	,0.51338,	0.57721,	0.54993	,0.54028	,0.55754	,0.56472,	0.46807	,0.50107	,0.41383	,0.34694	,0.29569	,0.42041	,0.4065	,0.32457	,0.47287	,0.32986	,0.35707	,0.34921	,0.30387,	0.37089,	0.90609	,0.90578	,0.914	,0.94116	,0.93667	,0.90564,	0.90851	,0.90385	,0.90598	,0.90328,	0.94834	,0.6106	,0.5977	,0.62394	,0.62919	,0.6333	,0.59323,	0.67312	,0.581,	0.63359,	0.65133	,0.64707	,0.73351	,0.81159	,0.77124	,0.77733,	0.78745	,0.81725	,0.75319	,0.78147,	0.71532,	0.85409)
E5['values']=(0.016108,	0.0081195,	0.0032891,	0.0042707	,0.0020514	,0.0034138	,0.0064523,	0.0079794,	0.0016469,	0.0017901,	0.0013313,	0.0033334	,0.0080153	,0.0052267	,0.0082717	,0.0084044,	0.0066839	,0.0085691,	0.0049933	,0.0074228,	0.005191	,0.017213,	0.038786	,0.0093485,	0.025145,	0.013056	,0.024752	,0.024899,	0.026225	,0.011088	,0.027633,	0.021213,	0.01847	,0.013872	,0.0084269	,0.0067132,	0.0042817	,0.0041101,	0.0060798,	0.011828,	0.015515,	0.0099932	,0.01321	,0.014314	,0.021723,	0.010939,	0.01428	,0.014091,	0.022554	,0.025989,	0.033338,	0.02594,	0.0028534,	0.0044748,	0.0064581	,0.0066868	,0.0064077,	0.0091723	,0.0053299,	0.0017668,	0.014009	,0.0076564,	0.020345	,0.010138	,0.0085504	,0.0059959,	0.017742	,0.0054383	,0.005678,	0.013186,	0.011238	,0.0093394,	0.010462	,0.0053178,	0.0064972	,0.0080032,	0.013829,	0.013327,	0.0090645,	0.017961,	0.0075307	,0.029213,	0.022362	,0.015397	,0.035592	,0.022099,	0.019917,	0.025566	,0.01071	,0.03267	,0.03223	,0.01028	,0.014732	,0.016966	,0.02093	,0.033467	,0.033899	,0.0296	,0.020931,	0.035373	,0.061249	,0.050382,	0.052636,	0.046329	,0.06355,	0.044212	,0.057693,	0.073089	,0.0037361	,0.0063155	,0.0053299,	0.0096879,	0.0050792	,0.015874	,0.0078824	,0.0092902	,0.0033059,	0.0070397	,0.0073064	,0.013485,	0.0073356	,0.008632	,0.0052838,	0.0078393	,0.021032	,0.022814,	0.027107	,0.026095	,0.017661	,0.015815	,0.009958	,0.031658	,0.029313,	0.016412	,0.02682	,0.019839	,0.015486,	0.014265,	0.013556,	0.01299	,0.024394	,0.021025,	0.007333	,0.028418	,0.015659,	0.011717	,0.01894	,0.030726	,0.016892	,0.033823	,0.020108	,0.034088	,0.039637	,0.018816	,0.018365	,0.017874	,0.011445	,0.022351	,0.036988	,0.03742	,0.021208	,0.015674	,0.031125	,0.031133	,0.031303,	0.014993	,0.019969	,0.025773,	0.028776,	0.028929	,0.019966,	0.023734,	0.017724	,0.027257	,0.029562	,0.021648,	0.014424	,0.01814	,0.0234,	0.0093152	,0.014211,	0.010193,	0.0050436,	0.0094072,	0.0049035,	0.0058043,	0.010904,	0.010261,	0.0083289,	0.0087041,	0.0053745,	0.0055761,	0.010672	,0.0034924,	0.015925	,0.0058518,	0.010427,	0.0070888	,0.0055403	,0.017136,	0.0054631,	0.0019439	,0.0075278	,0.014806,	0.010444	,0.0097191	,0.0025203,	0.032992	,0.051004,	0.040954	,0.065523,	0.060352,	0.056492	,0.059803	,0.057789	,0.04395	,0.010553	,0.0076781	,0.031157	,0.0091383	,0.012794	,0.013223	,0.03269,	0.0062465	,0.011839	,0.012618	,0.021691	,0.010756,	0.003803,	0.0088032,	0.010699	,0.0066634	,0.0082145	,0.0092251	,0.010681	,0.0095526	,0.010352	,0.013661	,0.0055037	,0.016886	,0.014972	,0.038028	,0.033878	,0.035644	,0.037671	,0.033997	,0.022728,	0.048122	,0.027581	,0.040405,	0.029915,	0.0012673	,0.0026026	,0.0013079	,0.0020561	,0.0014143	,0.0011153,	0.0020074	,0.0011564,	0.0018843,	0.0035984	,0.0038262	,0.0020163,	0.028511	,0.037876	,0.04047,	0.019211,	0.034115	,0.021485,	0.016694,	0.015992,	0.027709,	0.014228,	0.015404,	0.0090841	,0.0036695	,0.0033307	,0.0026048	,0.0056302	,0.0033311	,0.0030851	,0.0045556	,0.0047347	,0.0019474	,0.0027313,	0.0063587	,0.014579	,0.0082832,	0.019064	,0.0060204	,0.015285	,0.016385,	0.0075476,	0.0069433	,0.011672	,0.005005,	0.0057932	,0.024383	,0.04158,	0.020929,	0.0081274,	0.026666,	0.019765,	0.028872,	0.012908,	0.02758	,0.033093,	0.035863	,0.0079387,	0.0067759,	0.0072595,	0.0044268	,0.002997	,0.0051092	,0.0048222	,0.0064203	,0.0042611,	0.004966	,0.0023072,	0.028158,	0.027151	,0.025613	,0.027693	,0.031721	,0.033957,	0.03144,	0.024688,	0.032861,	0.032533,	0.017374	,0.024197,	0.042478	,0.031359,	0.031585	,0.032923,	0.041703	,0.045488	,0.041101,	0.018121	,0.034074)
E6['values']=(1.1756,	0.69659	,0.44348,	0.58785,	0.34214	,0.34068,	0.53904	,0.66975,	0.33696,	0.28082	,0.25026,	0.49751	,0.91499	,0.67811,	0.87177,	0.94545	,0.71713	,1.008	,0.74174	,0.91307,	0.90513,	1.653	,1.5371	,0.5341,	1.1076,	0.72247	,1.1365,	1.0511	,1.2307,	0.62671	,1.0815,	0.83221	,1.8893,	1.2024	,1.335	,1.2359	,0.86218,	0.87687,	1.0326,	1.5452	,1.1374	,1.0952	,1.0136	,1.3083	,1.353	,1.1602	,1.0962	,1.2593,	1.3805	,1.3343,	1.5377	,1.4686	,0.53199,	0.52114	,0.90702	,0.944,	0.73274,	0.75194,	0.79862,	0.30832	,1.2269	,0.8079	,1.495	,1.1047,	0.9961,	1.1899,	1.4016,	0.78201,	0.7658	,1.1185,	1.0185	,0.85025,	0.94985	,0.66403,	0.64839	,0.8112	,1.098,	1.0006,	0.82529	,1.166	,0.7396	,1.5956,	1.2541,	0.94617,	2.1004	,1.184,	1.1427	,1.3596	,0.56447,	1.9018	,1.7156	,0.76676,	1.1232	,0.93682	,1.2659,	2.2422	,2.5551	,1.5807	,1.6749,	2.2137	,2.413	,1.4463,	1.6648	,1.9866,	2.203	,1.8452,	1.9757	,2.6604,	0.6508,	0.71949,	0.75496	,1.0015	,0.63273	,0.8331	,0.90082	,0.82383,	0.67289,	0.77399	,0.90513,	0.9229	,0.82809	,0.84994,	0.80402	,0.86	,1.6461	,1.6221	,1.8038,	1.8363	,1.4027	,1.3323	,0.77718	,2.3052	,1.6895,	1.321	,1.7405,	1.4969	,1.3598	,1.2681	,1.3539	,0.59895	,1.8274	,1.705	,0.94296,	1.7782,	1.4395	,1.1363,	1.7727	,2.5094,	1.5136,	1.6879	,1.7187,	1.8501,	1.8526,	1.014	,1.6875,	1.2161	,1.0843	,1.4575,	2.0484,	2.0094	,1.5332,	1.489,	2.4883	,2.4808	,2.6613,	1.2646,	1.8527,	2.2704	,2.0412,	2.389	,2.1403,	1.0351	,0.9943	,0.8989	,1.0734,	1.0503,	1.0097	,0.82059,	0.78887	,0.7271	,0.64966	,0.52175	,0.46762,	0.37324	,0.37728	,0.36029,	0.63468	,0.65567	,0.49195,	0.54481	,0.3475	,0.43769	,0.48911	,0.26169	,1.3596,	0.60629	,0.73255	,0.913	,0.82279,	1.6315,	0.66423,	0.28857	,1.0292	,1.1886,	1.341	,0.87046	,0.49261,	1.8296	,1.5025	,1.5452,	1.7493	,1.813	,1.8504	,1.7489,	1.7001	,2.2764	,0.88407	,0.68174,	0.98858,	1.0837	,1.0089,	1.1105,	1.4955	,0.69178	,1.0693	,1.0368,	1.1781,	0.67306,	0.85839,	1.0378,	1.0284,	0.9805,	0.98834,	1.0171,	1.6203	,1.1433	,1.5053	,1.42	,0.62317,	1.3088,	1.3848,	1.9702,	1.4606	,1.6701	,2.2241	,2.0585	,1.5681	,2.4685,	1.2406,	2.1073	,1.4215	,0.23514,	0.32567,	0.22547,	0.38449	,0.27099,	0.29502,	0.34316	,0.26037,	0.36533	,0.27688,	0.28509,	0.32598	,1.851	,2.7085,	2.579	,1.3579	,1.9019,	1.3669	,1.4111	,1.1489	,2.4866	,1.4943,	1.6497	,0.78535	,0.41928,	0.3731,	0.39905,	0.48992,	0.3101,	0.37415,	0.41054,	0.37492,	0.1694	,0.27303,	0.38686,	0.9458	,0.73904,	1.0667,	0.68561,	0.84271,	0.96576	,0.75154	,0.60779	,0.80348,	0.44798,	0.43227,	1.2554	,2.2733,	1.3662	,0.4391,	1.5438	,1.4857,	1.5313	,0.98926,	1.552	,1.9632,	2.1311	,0.73774	,0.67264	,0.67925,	0.41828,	0.50576,	0.71514,	0.59218	,0.66405,	0.52178	,0.59946	,0.34029	,2.3847	,1.8937	,1.6951	,1.7157	,1.973,	1.8275,	1.2434	,1.408,	1.7979,	1.8033,	0.83183,	1.2042,	1.5913,	1.3541,	1.9975,	1.8568	,2.0281	,2.4059,	1.6935	,1.1526	,1.5623)
E1.current(1)

E2.current(1)

E3.current(1)


E4.current(1)

E5.current(1)

E6.current(1)
Bsubmit=ttk.Button(page2,command=SUBMIT,text="SUBMIT")
Breset=ttk.Button(page2,command=RESET,text="RESET")

L.grid(row=4,column=1,columnspan=4)
b1.grid(row=6,column=3)
b2.grid(row=6,column=1)
b3.grid(row=9,column=3)
b4.grid(row=9,column=1)
b5.grid(row=12,column=3)
b6.grid(row=12,column=1)
E1.grid(row=6,column=4)
E2.grid(row=6,column=2)
E3.grid(row=9,column=4)
E4.grid(row=9,column=2)
E5.grid(row=12,column=4)
E6.grid(row=12,column=2)

Bsubmit.grid(row=13,column=1,columnspan=1)

Breset.grid(row=13,column=4,columnspan=4)
L2=ttk.Label(page1,text="   ACCURACY OF THE MODEL",font=("arial",25,"bold"))
L2.grid(row=1,column=1,columnspan=4)
B4=Button(page1,command=KNN,text="K Nearest Neighbour",font=("arial",10,"bold"))
B3=Button(page1,text="Logistic regression",command=LG,font=("arial",10,"bold"))
B2=Button(page1,text="Decision Tree",command=DT,font=("arial",10,"bold"))
B1=Button(page1,text="Naive Bayes",command=NB,font=("arial",10,"bold"))
B5=Button(page1,text="COMPARE",command=COMPARE,font=("arial",10,"bold"))
B1.grid(row=2,columnspan=6)
B2.grid(row=3,columnspan=6)
B3.grid(row=4,columnspan=6)
B4.grid(row=5,columnspan=6)
B5.grid(row=6,columnspan=6)

R2=ttk.Label(page3,text="   ANALYSIS OF THE MODEL",font=("arial",25,"bold"))
R2.grid(row=1,column=1,columnspan=4)
r1=Button(page3,text="classification report of KNN",font=("arial",10,"bold"),command=clas_knn) 
r2=Button(page3,text="classification report of NB",font=("arial",10,"bold"),command=clas_nb) 
r3=Button(page3,text="classification report of DT",font=("arial",10,"bold"),command=clas_dt)
r4=Button(page3,text="classification report of LG",font=("arial",10,"bold"),command=clas_lg)  
r5=Button(page3,text="Confusion matrix",font=("arial",10,"bold"),command=conf) 
r1.grid(row=2,columnspan=6)
r2.grid(row=3,columnspan=6)
r3.grid(row=4,columnspan=6)
r4.grid(row=5,columnspan=6)
r5.grid(row=6,columnspan=6)

w.mainloop()
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    